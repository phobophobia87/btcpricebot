!pip install python-telegram-bot --quiet

import nest_asyncio
import requests
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# Apply patch to allow nested event loops (needed in Colab)
nest_asyncio.apply()

# Replace with your actual bot token
TELEGRAM_TOKEN = '7871181641:AAECAlUG47815PoZZnYfXpF5DgHOcNwQ7YE'

# Coinbase API URL
API_URL = 'https://api.coinbase.com/v2/prices/spot?currency=USD'

# Get Bitcoin Price
def get_bitcoin_price():
    try:
        response = requests.get(API_URL)
        data = response.json()
        price = data['data']['amount']
        return f"\U0001F4B0 Current Bitcoin Price in USD: ${price}"
    except Exception as e:
        return f"\u274C Error: {str(e)}"

# /start command handler
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("\U0001F44B Welcome! Send /price to get the current Bitcoin price.")

# /price command handler
async def price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = get_bitcoin_price()
    await update.message.reply_text(message)

# Main function (works inside Colab)
def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("price", price))

    print("âœ… Bot is running. Send /start or /price in Telegram.")
    app.run_polling()

main()
